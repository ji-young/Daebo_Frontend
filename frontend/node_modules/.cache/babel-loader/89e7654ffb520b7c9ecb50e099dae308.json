{"ast":null,"code":"import axios from'axios';// ajax 관련 요청 함수들은 여기다가 모듈화 \nexport function ajax1(input){return axios.get('요청 url'+input,{headers:{// 요청 헤더\nAuthorization:'KakaoAK 84b050274e5e1c6da8d55c7ad12c0feb'// api key\n}}).then(function(res){return res.data;});}export function join(id,name,email,pw){return axios.post('http://34.64.88.80/~/rest-auth/registration/',{headers:{// 요청 헤더\n'Content-type':'application/json'},username:name,email:email,password1:pw,password2:pw}).then(function(res){return res;});}export function login(name,email,pw){return axios.post('http://34.64.88.80/~/rest-auth/login/',{headers:{// 요청 헤더\n'Content-type':'application/json'},username:name,email:email,password:pw}).then(function(res){return res.data;}).then(function(res){var userinfo={token:res.token,user:res.user};return userinfo;});}export function recipeRate(name,recipe_name,rate){return axios.post('',{headers:{'Content-type':'application/json'},name:name,recipe_name:recipe_name,rate:rate}).then(function(res){return res.data;});}export function getRecip(){return axios.get('http://34.64.88.80/recipe/getFive/').then(function(res){return res.data;});}export function getRecip2(tags,jaryo){return axios.post('http://34.64.88.80/recipe/algo/',{headers:{// 요청 헤더\n'Content-type':'application/json'},\"tag\":tags,\"ingredients\":jaryo}).then(function(res){return res.data;});}//recipe/regScore(recipe_number, score)\nexport function registerScore(recipe_number,score){return axios.post('http://34.64.88.80/recipe/regScore/',{headers:{'Content-type':'application/json'},\"recipe\":recipe_number,\"score\":score}).then(function(res){return res.data;});}export function getMap(food,area){return axios.post('http://34.64.88.80/recipe/map/',{headers:{'Content-type':'application/json'},\"food\":food,\"area\":area}).then(function(res){return res.data;});}export function requestComparison(id1,id2){return axios.post('http://34.64.88.80/recipe/compare/',{headers:{'Content-type':'application/json'},'id1':id1,'id2':id2}).then(function(res){return res.data;}).catch(function(error){console.log(error.respose);});}","map":{"version":3,"sources":["/Users/Jiyoung/Daebo_Project/frontend/src/ajax/ajax.js"],"names":["axios","ajax1","input","get","headers","Authorization","then","res","data","join","id","name","email","pw","post","username","password1","password2","login","password","userinfo","token","user","recipeRate","recipe_name","rate","getRecip","getRecip2","tags","jaryo","registerScore","recipe_number","score","getMap","food","area","requestComparison","id1","id2","catch","error","console","log","respose"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n// ajax 관련 요청 함수들은 여기다가 모듈화 \n\nexport function ajax1(input) {\n  return   axios.get('요청 url'+input, { \n            headers: { // 요청 헤더\n                         Authorization : 'KakaoAK 84b050274e5e1c6da8d55c7ad12c0feb' // api key\n                     }\n                    }).then(res=>res.data);\n}\n\nexport function join(id,name,email,pw) {\n  return   axios.post('http://34.64.88.80/~/rest-auth/registration/', { \n            headers: { // 요청 헤더\n                        'Content-type': 'application/json'\n                     },\n                     \n                     username: name,\n                     email: email,\n                     password1: pw,\n                     password2: pw\n                  \n                    }).then(res=>res);\n}\n\nexport function login(name,email,pw) {\n  return   axios.post('http://34.64.88.80/~/rest-auth/login/', { \n            headers: { // 요청 헤더\n                     'Content-type': 'application/json'\n                     },\n\n              \n                      username: name,\n                      email: email,\n                      password: pw\n                    \n                     \n                    }).then(res=>res.data)\n                    \n                    .then(res=>{\n                      const userinfo = {\n                        token:res.token,\n                        user:res.user\n                      }\n                      return userinfo\n                    });\n}\n\nexport function recipeRate(name, recipe_name, rate){\n  return axios.post('',{\n    headers : {\n      'Content-type' : 'application/json'\n    },\n\n    name : name,\n    recipe_name : recipe_name,\n    rate : rate\n  }).then(res => res.data)\n}\n\nexport function getRecip() {\n  return   axios.get('http://34.64.88.80/recipe/getFive/').then(res=>res.data);\n}\n\nexport function getRecip2(tags,jaryo) {\n  return   axios.post('http://34.64.88.80/recipe/algo/',{\n    headers: { // 요청 헤더\n      'Content-type': 'application/json'\n      },\n    \"tag\" : tags,\n    \"ingredients\":jaryo\n }).then(res=>res.data);\n}\n\n//recipe/regScore(recipe_number, score)\nexport function registerScore(recipe_number, score){\n  return axios.post('http://34.64.88.80/recipe/regScore/',{\n    headers : {\n      'Content-type' : 'application/json'\n    },\n    \"recipe\" : recipe_number,\n    \"score\" : score\n  }).then(res=>res.data)\n}\n\nexport function getMap(food, area){\n  return axios.post('http://34.64.88.80/recipe/map/', {\n    headers : {\n      'Content-type' : 'application/json'\n    },\n    \"food\" : food,\n    \"area\" : area\n  }).then(res=>res.data)\n}\n\n\nexport function requestComparison(id1, id2){\n  return axios.post('http://34.64.88.80/recipe/compare/',{\n    headers : {\n      'Content-type' : 'application/json'\n    },\n    'id1' : id1,\n    'id2' : id2,\n  }).then(res=>res.data).catch(error => {console.log(error.respose)})\n}\n"]},"metadata":{},"sourceType":"module"}