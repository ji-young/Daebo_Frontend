{"ast":null,"code":"var _jsxFileName = \"/Users/Jiyoung/Daebo_Project/frontend/src/components/login/LoginForm.js\";\nimport React, { useState, useCallback } from 'react';\nimport { makeStyles, TextField, Button, Container } from '@material-ui/core';\nimport { login, join } from 'ajax/ajax';\nimport { connect } from 'react-redux';\nimport { setUserInfo } from 'store/actions/index';\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 90\n  },\n  TextField: {\n    fullWidth: true,\n    marginTop: 20\n  },\n  Button: {\n    marginTop: 20\n  }\n}));\n\nfunction BasicTextFields(props) {\n  const classes = useStyles(); // eslint-disable-next-line\n\n  const [id, setId] = useState(''); // eslint-disable-next-line\n\n  const [pw, setPw] = useState(''); // eslint-disable-next-line\n\n  const [pwConfirm, setPwc] = useState(''); // eslint-disable-next-line\n\n  const [name, setName] = useState(''); // eslint-disable-next-line\n\n  const [email, setMail] = useState('');\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  }, []); // eslint-disable-next-line\n\n  const onChangePw = useCallback(e => {\n    setPw(e.target.value);\n  }, []);\n  const onChangePwc = useCallback(e => {\n    setPwc(e.target.value);\n  }, []); // eslint-disable-next-line \n\n  const onChangeName = useCallback(e => {\n    setName(e.target.value);\n  }, []); // eslint-disable-next-line \n\n  const onChangeEmail = useCallback(e => {\n    setMail(e.target.value);\n  }, []);\n\n  const onCheckId = () => {\n    if (id.replace(/^[A-Za-z0-9+]*$/g, '')) return id.length > 10 ? false : true;else return id.length > 10 ? true : false;\n  };\n\n  const onCheckPw = () => {\n    if (pw.replace(/^[A-Za-z0-9]{6,12}$/, '')) return true;else return false;\n  };\n\n  const onCheckPwc = () => {\n    if (pw === pwConfirm) return true;else return false;\n  };\n\n  const onCheckEmail = () => {\n    if (email.replace(/^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i, '')) return true;else return false;\n  };\n\n  function DoJoin() {\n    const res = join(id, name, email, pw);\n    res.then(result => {\n      console.log(result.statusText);\n\n      if (result.statusText == 'Created') {\n        alert('가입 성공');\n        props.history.push(\"/Login\");\n      } else {\n        alert('가입실패');\n      }\n    });\n  } // 유저 정보 디스패치\n\n\n  function DoLogin() {\n    const res = login(id, email, pw);\n    res.then(result => {\n      localStorage.setItem(\"userInfo\", JSON.stringify({\n        name: result.user,\n        token: result.token,\n        auth: true\n      }));\n      props.SetUserInfo({\n        token: result.token,\n        name: result.user,\n        auth: true\n      });\n      props.history.push(\"/Main\");\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (props.type === 'Join') {\n      if (onCheckId() === true || name.length > 10 || onCheckPw() === true || onCheckPwc() === false || onCheckEmail() === true || id.length === 0 || name.length === 0 || email.length === 0 || pw.length === 0 || pwConfirm.length === 0) return alert('회원가입 양식에 맞춰서 작성해주세요.');else DoJoin();\n    } else {\n      DoLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, props.type === 'login' ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"\\uB85C\\uADF8\\uC778\") : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.TextField,\n    required: true,\n    error: onCheckId() === true ? true : false,\n    helperText: onCheckId() === true ? \"아이디는 10자리 내에서 영문자, 숫자 조합만 가능합니다.\" : \"아이디를 작성해주세요.\",\n    onChange: onChangeId,\n    id: \"name\",\n    label: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), props.type === 'login' && /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.TextField,\n    required: true,\n    onChange: onChangeEmail,\n    type: \"email\",\n    error: onCheckEmail() === true ? true : false,\n    helperText: onCheckEmail() === true ? \"이메일 형식에 맞지 않습니다.\" : \"이메일을 입력해주세요.\",\n    id: \"email\",\n    label: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 14\n    }\n  }), props.type === 'Join' && /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.TextField,\n    required: true,\n    onChange: onChangeName,\n    error: name.length > 10 ? true : false,\n    helperText: name.length > 10 ? \"이름은 10글자 이내로 작성해주세요.\" : \"이름을 작성해주세요.\",\n    id: \"name\",\n    label: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), props.type === 'Join' && /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.TextField,\n    required: true,\n    onChange: onChangeEmail,\n    type: \"email\",\n    error: onCheckEmail() === true ? true : false,\n    helperText: onCheckEmail() === true ? \"이메일 형식에 맞지 않습니다.\" : \"이메일을 입력해주세요.\",\n    id: \"email\",\n    label: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.TextField,\n    type: \"password\",\n    onChange: onChangePw,\n    error: onCheckPw() === false ? false : true,\n    helperText: onCheckPw() === false ? '비밀번호 입력해주세요.' : '숫자와 문자 포함 형태의 6~12자리 입니다.',\n    required: true,\n    id: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }), props.type === 'Join' && /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    onChange: onChangePwc,\n    id: \"passwordConfirm\",\n    error: onCheckPwc() === true ? false : true,\n    helperText: onCheckPwc() === true ? '비밀번호를 입력해주세요.' : '비밀번호가 일치하지 않습니다.',\n    className: classes.TextField,\n    name: \"passwordConfirm\",\n    type: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), props.type === 'login' ? /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    className: classes.Button,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC778\") : /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    type: \"submit\",\n    className: classes.Button,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    userinfo: state.userinfo // store 의 mode 를 props로 사용함\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  //SetMode 에 엑션 디스패치 연결\n  return {\n    SetUserInfo: userinfo => {\n      dispatch(setUserInfo(userinfo));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BasicTextFields));","map":{"version":3,"sources":["/Users/Jiyoung/Daebo_Project/frontend/src/components/login/LoginForm.js"],"names":["React","useState","useCallback","makeStyles","TextField","Button","Container","login","join","connect","setUserInfo","withRouter","useStyles","theme","root","paddingTop","fullWidth","marginTop","BasicTextFields","props","classes","id","setId","pw","setPw","pwConfirm","setPwc","name","setName","email","setMail","onChangeId","e","target","value","onChangePw","onChangePwc","onChangeName","onChangeEmail","onCheckId","replace","length","onCheckPw","onCheckPwc","onCheckEmail","DoJoin","res","then","result","console","log","statusText","alert","history","push","DoLogin","localStorage","setItem","JSON","stringify","user","token","auth","SetUserInfo","handleSubmit","preventDefault","type","mapStateToProps","state","userinfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { makeStyles ,TextField, Button, Container } from '@material-ui/core';\nimport {login,join} from 'ajax/ajax'\nimport { connect } from 'react-redux'\nimport {setUserInfo} from 'store/actions/index' \nimport { withRouter  } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop : 90\n  },\n  TextField:{\n    fullWidth: true,\n    marginTop : 20\n  },\n  Button:{\n    \n    marginTop : 20\n  }\n\n}));\n\n\n\n\nfunction BasicTextFields(props) {\n \n  const classes = useStyles();\n  // eslint-disable-next-line\n  const [id, setId] =  useState('');\n  // eslint-disable-next-line\n  const [pw, setPw] =  useState('');\n  // eslint-disable-next-line\n  const [pwConfirm, setPwc] = useState('');\n  \n  // eslint-disable-next-line\n  const [name, setName] = useState('');\n  \n  // eslint-disable-next-line\n  const [email, setMail] = useState('');\n  \n  \n  const onChangeId = useCallback(e=>{\n   setId(e.target.value);\n\n  },[]);\n   // eslint-disable-next-line\n  const onChangePw = useCallback(e=>{\n    setPw(e.target.value);\n    \n  },[]);\n \n  const onChangePwc = useCallback(e=>{\n    setPwc(e.target.value);\n\n  },[]);\n\n   // eslint-disable-next-line \n   const onChangeName = useCallback(e=>{\n    setName(e.target.value);\n\n   },[]);\n\n   // eslint-disable-next-line \n   const onChangeEmail = useCallback(e=>{\n     setMail(e.target.value);\n   },[]);\n\n  const onCheckId = () => {\n\n    \n     if (id.replace(/^[A-Za-z0-9+]*$/g, '') ) \n          return id.length > 10 ? false : true;\n     else \n          return id.length > 10 ? true : false;\n\n  };\n  \n  const onCheckPw = () =>{\n    if(pw.replace(/^[A-Za-z0-9]{6,12}$/, ''))\n      return true;\n    else\n      return false; \n  }\n\n  const onCheckPwc = () => {\n    if(pw === pwConfirm) return true;\n    else\n      return false;\n  }\n\n  const onCheckEmail = () =>{\n    if(email.replace(/^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i, ''))\n       return true;\n    else\n      return false;\n  }\n  function DoJoin(){\n    const res= join(id,name,email,pw)\n    res.then(\n      (result) =>{\n        console.log(result.statusText)\n        if(result.statusText == 'Created'){\n          alert('가입 성공')\n          props.history.push(\"/Login\")\n        }else{alert('가입실패')}\n      }\n    )\n  }\n\n// 유저 정보 디스패치\n  function DoLogin(){\n\n   const res= login(id,email,pw)\n   res.then((result)=>{\n    \n     localStorage.setItem(\n      \"userInfo\",\n      JSON.stringify({\n        name: result.user,\n        token:result.token,\n        auth:true\n      })  \n    );\n     props.SetUserInfo({\n      token:result.token,\n      name:result.user,\n      auth:true\n    })\n     props.history.push(\"/Main\")\n   })\n\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    if(props.type==='Join'){\n      if(onCheckId() === true || \n       name.length  >10 ||\n       onCheckPw() === true || \n      onCheckPwc() === false || \n      onCheckEmail() === true ||\n      id.length === 0 || \n      name.length === 0 ||\n      email.length === 0 ||\n      pw.length === 0 ||\n      pwConfirm.length === 0 \n      )      \n       return alert('회원가입 양식에 맞춰서 작성해주세요.');\n    else\n        DoJoin();\n    }else {\n      DoLogin();\n    }\n  }\n\n \n  return (\n\n    <Container maxWidth='xs' align='center'>\n    <form className={classes.root}\n      onSubmit={handleSubmit}\n      noValidate autoComplete=\"off\">\n        <div className=\"logo-area\">\n          {props.type==='login'? (\n              <h1 className=\"logo-title\">로그인</h1>\n              ) :(\n              <h1 className=\"logo-title\">회원가입</h1> \n            )\n          }\n            <TextField  fullWidth= {true} className={classes.TextField}  required\n                        error = {onCheckId() === true ? true : false }\n                        helperText = {onCheckId() === true ? \n                                      \"아이디는 10자리 내에서 영문자, 숫자 조합만 가능합니다.\" : \"아이디를 작성해주세요.\"}\n                        onChange={onChangeId} id=\"name\" label=\"아이디를 입력해주세요.\" />\n\n           {props.type ==='login' && (\n             <TextField fullWidth= {true} className={classes.TextField} required\n             onChange = {onChangeEmail}\n             type=\"email\"\n             error = {\n                   onCheckEmail() === true ? true : false\n             }\n             helperText = {\n                   onCheckEmail() === true ? \"이메일 형식에 맞지 않습니다.\" : \"이메일을 입력해주세요.\"\n             }\n             id=\"email\" label=\"이메일을 입력해주세요.\" />\n            )\n          }             \n           \n\n          {props.type==='Join' && (\n            <TextField fullWidth= {true} className={classes.TextField} required\n            onChange={onChangeName} \n            error = {name.length  > 10 ? true : false}\n            helperText={\n              name.length  > 10 ? \"이름은 10글자 이내로 작성해주세요.\" : \"이름을 작성해주세요.\"\n            }\n            id=\"name\" label=\"이름을 입력해주세요.\" />\n            ) \n          }\n\n          {props.type==='Join' && (\n            <TextField fullWidth= {true} className={classes.TextField} required\n            onChange = {onChangeEmail}\n            type=\"email\"\n            error = {\n                  onCheckEmail() === true ? true : false\n            }\n            helperText = {\n                  onCheckEmail() === true ? \"이메일 형식에 맞지 않습니다.\" : \"이메일을 입력해주세요.\"\n            }\n            id=\"email\" label=\"이메일을 입력해주세요.\" />\n            ) \n          }\n          \n        \n          <TextField fullWidth= {true} className={classes.TextField}    \n          type =\"password\"\n          onChange = {onChangePw}\n          error = {\n            onCheckPw() === false ? false : true\n          }\n          helperText ={\n            onCheckPw() === false ? '비밀번호 입력해주세요.' : '숫자와 문자 포함 형태의 6~12자리 입니다.'\n          }\n          required id=\"password\" label=\"비밀번호를 입력해주세요.\" />\n          \n          {props.type==='Join' && (\n            <TextField fullWidth= {true}\n            onChange={onChangePwc}\n            id=\"passwordConfirm\"\n            \n            error ={\n                onCheckPwc() === true ? false : true\n            }\n            helperText={\n              onCheckPwc() === true ? '비밀번호를 입력해주세요.' : '비밀번호가 일치하지 않습니다.'\n            }\n            className={classes.TextField}  name=\"passwordConfirm\" type=\"password\" label=\"비밀번호 확인\" />\n          )} \n\n\n          {props.type==='login' ? (\n            <Button type = \"submit\" fullWidth={true} className={classes.Button} size=\"large\" variant=\"contained\" color=\"primary\">\n              로그인\n            </Button>\n            ) : (\n            <Button fullWidth={true}\n              type = \"submit\"\n              className={classes.Button}  size=\"large\" variant=\"contained\" color=\"primary\">\n            회원가입\n          </Button>\n              )\n          }\n   \n      </div>\n    </form>\n    </Container>\n  );\n}\n\nconst mapStateToProps  = state => {\n  return{\n    userinfo : state.userinfo // store 의 mode 를 props로 사용함\n  }\n}\n\nconst mapDispatchToProps  = dispatch => { //SetMode 에 엑션 디스패치 연결\n  return{\n    SetUserInfo : (userinfo) =>{\n      dispatch(setUserInfo(userinfo))\n    }\n  }\n}\n\nexport default withRouter (\n  connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BasicTextFields)\n)"]},"metadata":{},"sourceType":"module"}