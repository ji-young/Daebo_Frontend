{"ast":null,"code":"var _jsxFileName = \"/Users/Jiyoung/Daebo_Project/frontend/src/components/recip/recipemodalscroll.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Anoreciplist from './athreciplist.js';\nimport Rating from '@material-ui/lab/Rating';\nimport { IconButton } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { fontSize } from '@material-ui/system';\nimport { registerScore } from 'ajax/ajax';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(3, 3, 3, 3)\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(4, 4, 4, 4)\n    }\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: '#4CAF50'\n  },\n  texth1: {\n    fontWeight: 'bold',\n    color: '#4CAF50',\n    fontSize: 30\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nexport default function ScrollDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  const labels = {\n    0.5: '0.5점',\n    1: '1점',\n    1.5: '1.5점',\n    2: '2점',\n    2.5: '2.5점',\n    3: '3점',\n    3.5: '3.5점',\n    4: '4점',\n    4.5: '4.5점',\n    5: '5점'\n  };\n  const MyButton = styled(Button)({\n    width: '100%',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0\n  });\n  let list = [];\n  props.cook_method.split(\".\").forEach(character => {\n    if (character.length != 0 || character != ' ' || character != null || character != '.') list.push( /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, character));\n  });\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\n\n  function getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`\n    };\n  }\n\n  const Dorecipeinfo = e => {\n    e.preventDefault();\n    console.log(props.id);\n    console.log(value);\n    const res = registerScore(props.id, value);\n    res.then(result => {\n      console.log(result);\n    });\n    setOpen(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]); // console.log('asdf'+props.collaborative )\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickOpen('body'),\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    scroll: scroll,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.texth1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 48\n    }\n  }, \"\\uD83E\\uDD57\\uB808\\uC2DC\\uD53C \\uC0C1\\uC138 \\uD398\\uC774\\uC9C0\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: scroll === 'paper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, [...new Array(1)].map(() => `                                                 \n                해시태그로 검색된 추천 레시피 입니다. 확인해보세요 !               \n`).join('\\n')), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: props.img,\n    alt: props.name,\n    height: \"400\",\n    width: \"500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"\\uB808\\uC2DC\\uD53C \\uC774\\uB984\"), props.name, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, \"\\uB808\\uC2DC\\uD53C \\uC7AC\\uB8CC\"), props.ingredients, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, \"\\uB9CC\\uB4DC\\uB294\\uB370 \\uAC78\\uB9AC\\uB294 \\uC2DC\\uAC04\"), props.time_req, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, \"\\uB9CC\\uB4DC\\uB294 \\uBC29\\uBC95\"), \"\\x1F\", list.length == 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, \"\\uB9CC\\uB4DC\\uB294 \\uBC29\\uBC95\\uC774 \\uC5C6\\uC5B4\\uC694 ^.\\u3160\"), list.length != 0 && list, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"\\uD3C9\\uC810\\uC744 \\uB9E4\\uACA8\\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(Rating, {\n    name: \"hover-feedback\",\n    value: value,\n    precision: 0.5,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n    },\n    onChangeActive: (event, newHover) => {\n      setHover(newHover);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), value !== null && /*#__PURE__*/React.createElement(Box, {\n    ml: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 26\n    }\n  }, labels[hover !== -1 ? hover : value]), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MyButton, {\n    onClick: Dorecipeinfo,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, \"\\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.texth1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDD58 \\uD68C\\uC6D0\\uB2D8\\uACFC \\uC720\\uC0AC\\uD55C \\uC0AC\\uB78C\\uB4E4\\uC774 \\uC88B\\uC544\\uD558\\uB294 \\uB808\\uC2DC\\uD53C \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 12\n    }\n  }), props.collaborative != \"nodata\" && /*#__PURE__*/React.createElement(Anoreciplist, {\n    data: props.collaborative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"\\uB3CC\\uC544\\uAC00\\uAE30\"))));\n}","map":{"version":3,"sources":["/Users/Jiyoung/Daebo_Project/frontend/src/components/recip/recipemodalscroll.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","styled","Box","Anoreciplist","Rating","IconButton","InfoIcon","fontSize","registerScore","useStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","display","alignItems","margin","text","fontWeight","color","texth1","icon","ScrollDialog","props","classes","open","setOpen","useState","scroll","setScroll","value","setValue","hover","setHover","labels","MyButton","width","list","cook_method","split","forEach","character","length","push","handleClickOpen","scrollType","handleClose","rand","Math","round","random","getModalStyle","top","left","transform","Dorecipeinfo","e","preventDefault","console","log","id","res","then","result","descriptionElementRef","useRef","useEffect","current","descriptionElement","focus","Array","map","join","img","name","ingredients","time_req","event","newValue","newHover","collaborative"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Anoreciplist from './athreciplist.js'\nimport Rating from '@material-ui/lab/Rating';\nimport {IconButton} from  '@material-ui/core'\nimport InfoIcon from '@material-ui/icons/Info';\nimport { fontSize } from '@material-ui/system';\nimport {registerScore} from 'ajax/ajax'\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(3,3,3,3),\n    },\n    root: {\n     \n      display: 'flex',\n      alignItems: 'center',\n      '& > *': {\n        margin: theme.spacing(4,4,4,4),\n      },\n    },\n    text:{\n      fontWeight : 'bold',\n      fontSize : 20,\n      color: '#4CAF50'\n    },\n    texth1:{\n      fontWeight : 'bold',\n      color : '#4CAF50',\n      fontSize : 30,\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n  }));\n\nexport default function ScrollDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  \n  const labels = {\n    0.5: '0.5점',\n    1: '1점',\n    1.5: '1.5점',\n    2: '2점',\n    2.5: '2.5점',\n    3: '3점',\n    3.5: '3.5점',\n    4: '4점',\n    4.5: '4.5점',\n    5: '5점',\n  };\n  const MyButton = styled(Button)({\n          width : '100%',\n          boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n          color: 'white',\n          background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n          border: 0,\n  });\n  let list = []\n  props.cook_method.split(\".\").forEach(character => \n    {\n    if(character.length!=0 || character!=' ' || character!=null || character!='.')\n      list.push(<p>{character}</p>)\n    }\n    )\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\n  \n  function getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  const Dorecipeinfo=(e)=>{\n    e.preventDefault();\n    console.log(props.id)\n    console.log(value)\n    const res= registerScore(props.id, value)\n    \n    res.then(\n       (result) =>{\n         console.log(result)\n       }\n    )\n    setOpen(false);\n   }\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  \n  // console.log('asdf'+props.collaborative )\n  return (\n    <div>\n      {/* <Button onClick={handleClickOpen('paper')}>scroll=paper</Button> */}\n      <IconButton onClick={handleClickOpen('body')} className={classes.icon}>\n                  <InfoIcon />\n      </IconButton>\n      {/* <Button onClick={handleClickOpen('body')}>scroll=body</Button> */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" ><h2 className={classes.texth1}>🥗레시피 상세 페이지</h2></DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          {/* <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n              )\n              .join('\\n')}\n          </DialogContentText> */}\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {[...new Array(1)]\n              .map(\n                () => `                                                 \n                해시태그로 검색된 추천 레시피 입니다. 확인해보세요 !               \n`,\n              )\n              .join('\\n')}\n          </DialogContentText>\n         \n      <p className={classes.text}>\n        이미지\n      </p>\n      <img src={props.img} alt={props.name} height=\"400\" width=\"500\" />\n      <p className={classes.text}>\n       레시피 이름 \n      </p>\n      {props.name}\n      <p className={classes.text}>\n       레시피 재료\n      </p>\n      {props.ingredients}\n      <p className={classes.text}>\n        만드는데 걸리는 시간\n      </p>\n      {props.time_req}\n      <p className={classes.text}>\n        만드는 방법\n      </p>\u001f\n        { \n          list.length==0 && <p>만드는 방법이 없어요 ^.ㅠ</p>\n        }\n        {\n          list.length!=0 && list\n        }\n      <p className={classes.text}>\n        평점을 매겨주세요.\n      </p>\n      <Rating\n        name=\"hover-feedback\"\n        value={value}\n        precision={0.5}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        onChangeActive={(event, newHover) => {\n          setHover(newHover);\n        }}\n\n        \n      />\n      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n      <br/>\n      <MyButton onClick = {Dorecipeinfo} variant=\"contained\" color=\"secondary\">\n        등록\n      </MyButton>\n      \n      <br/><br/><br/>\n      <h2 className={classes.texth1}>🥘 회원님과 유사한 사람들이 좋아하는 레시피 </h2>\n      <br/><br/>\n      {props.collaborative != \"nodata\" && (<Anoreciplist data={props.collaborative}></Anoreciplist>)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            돌아가기\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}