{"ast":null,"code":"import axios from 'axios'; // ajax 관련 요청 함수들은 여기다가 모듈화 \n\nexport function ajax1(input) {\n  return axios.get('요청 url' + input, {\n    headers: {\n      // 요청 헤더\n      Authorization: 'KakaoAK 84b050274e5e1c6da8d55c7ad12c0feb' // api key\n\n    }\n  }).then(res => res.data);\n}\nexport function join(id, name, email, pw) {\n  return axios.post('http://localhost:8000/rest-auth/registration/', {\n    headers: {\n      // 요청 헤더\n      'Content-type': 'application/json'\n    },\n    username: name,\n    email: email,\n    password1: pw,\n    password2: pw\n  }).then(res => res);\n}\nexport function login(name, email, pw) {\n  return axios.post('http://localhost:8000/rest-auth/login/', {\n    headers: {\n      // 요청 헤더\n      'Content-type': 'application/json'\n    },\n    username: name,\n    email: email,\n    password: pw\n  }).then(res => res.data).then(res => {\n    const userinfo = {\n      token: res.token,\n      user: res.user\n    };\n    return userinfo;\n  });\n}\nexport function recipeRate(name, recipe_name, rate) {\n  return axios.post('', {\n    headers: {\n      'Content-type': 'application/json'\n    },\n    name: name,\n    recipe_name: recipe_name,\n    rate: rate\n  }).then(res => res.data);\n}\nexport function getRecip() {\n  return axios.get('http://localhost:8000/recipe/getFive/').then(res => res.data);\n}\nexport function getRecip2(tags, jaryo) {\n  return axios.post('http://localhost:8000/recipe/algo/', {\n    headers: {\n      // 요청 헤더\n      'Content-type': 'application/json'\n    },\n    \"tag\": tags,\n    \"ingredients\": jaryo\n  }).then(res => res.data);\n} //recipe/regScore(recipe_number, score)\n\nexport function registerScore(recipe_number, score) {\n  return axios.post('http://localhost:8000/recipe/regScore/', {\n    headers: {\n      'Content-type': 'application/json'\n    },\n    \"recipe\": recipe_number,\n    \"score\": score\n  }).then(res => res.data);\n}\nexport function getMap(food, area) {\n  return axios.post('http://localhost:8000/recipe/map/', {\n    headers: {\n      'Content-type': 'application/json'\n    },\n    \"food\": food,\n    \"area\": area\n  }).then(res => res.data);\n}\nexport function requestComparison(id1, id2) {\n  return axios.post('http://localhost:8000/recipe/compare/', {\n    headers: {\n      'Content-type': 'application/json'\n    },\n    'id1': id1,\n    'id2': id2\n  }).then(res => res.data).catch(error => {\n    console.log(error.respose);\n  });\n}","map":{"version":3,"sources":["/Users/Jiyoung/Daebo_Project/frontend/src/ajax/ajax.js"],"names":["axios","ajax1","input","get","headers","Authorization","then","res","data","join","id","name","email","pw","post","username","password1","password2","login","password","userinfo","token","user","recipeRate","recipe_name","rate","getRecip","getRecip2","tags","jaryo","registerScore","recipe_number","score","getMap","food","area","requestComparison","id1","id2","catch","error","console","log","respose"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAC3B,SAASF,KAAK,CAACG,GAAN,CAAU,WAASD,KAAnB,EAA0B;AACzBE,IAAAA,OAAO,EAAE;AAAE;AACEC,MAAAA,aAAa,EAAG,0CADpB,CAC+D;;AAD/D;AADgB,GAA1B,EAIYC,IAJZ,CAIiBC,GAAG,IAAEA,GAAG,CAACC,IAJ1B,CAAT;AAKD;AAED,OAAO,SAASC,IAAT,CAAcC,EAAd,EAAiBC,IAAjB,EAAsBC,KAAtB,EAA4BC,EAA5B,EAAgC;AACrC,SAASb,KAAK,CAACc,IAAN,CAAW,+CAAX,EAA4D;AAC3DV,IAAAA,OAAO,EAAE;AAAE;AACC,sBAAgB;AADnB,KADkD;AAKlDW,IAAAA,QAAQ,EAAEJ,IALwC;AAMlDC,IAAAA,KAAK,EAAEA,KAN2C;AAOlDI,IAAAA,SAAS,EAAEH,EAPuC;AAQlDI,IAAAA,SAAS,EAAEJ;AARuC,GAA5D,EAUYP,IAVZ,CAUiBC,GAAG,IAAEA,GAVtB,CAAT;AAWD;AAED,OAAO,SAASW,KAAT,CAAeP,IAAf,EAAoBC,KAApB,EAA0BC,EAA1B,EAA8B;AACnC,SAASb,KAAK,CAACc,IAAN,CAAW,wCAAX,EAAqD;AACpDV,IAAAA,OAAO,EAAE;AAAE;AACF,sBAAgB;AADhB,KAD2C;AAM1CW,IAAAA,QAAQ,EAAEJ,IANgC;AAO1CC,IAAAA,KAAK,EAAEA,KAPmC;AAQ1CO,IAAAA,QAAQ,EAAEN;AARgC,GAArD,EAWYP,IAXZ,CAWiBC,GAAG,IAAEA,GAAG,CAACC,IAX1B,EAaUF,IAbV,CAaeC,GAAG,IAAE;AACT,UAAMa,QAAQ,GAAG;AACfC,MAAAA,KAAK,EAACd,GAAG,CAACc,KADK;AAEfC,MAAAA,IAAI,EAACf,GAAG,CAACe;AAFM,KAAjB;AAIA,WAAOF,QAAP;AACD,GAnBV,CAAT;AAoBD;AAED,OAAO,SAASG,UAAT,CAAoBZ,IAApB,EAA0Ba,WAA1B,EAAuCC,IAAvC,EAA4C;AACjD,SAAOzB,KAAK,CAACc,IAAN,CAAW,EAAX,EAAc;AACnBV,IAAAA,OAAO,EAAG;AACR,sBAAiB;AADT,KADS;AAKnBO,IAAAA,IAAI,EAAGA,IALY;AAMnBa,IAAAA,WAAW,EAAGA,WANK;AAOnBC,IAAAA,IAAI,EAAGA;AAPY,GAAd,EAQJnB,IARI,CAQCC,GAAG,IAAIA,GAAG,CAACC,IARZ,CAAP;AASD;AAED,OAAO,SAASkB,QAAT,GAAoB;AACzB,SAAS1B,KAAK,CAACG,GAAN,CAAU,uCAAV,EAAmDG,IAAnD,CAAwDC,GAAG,IAAEA,GAAG,CAACC,IAAjE,CAAT;AACD;AAED,OAAO,SAASmB,SAAT,CAAmBC,IAAnB,EAAwBC,KAAxB,EAA+B;AACpC,SAAS7B,KAAK,CAACc,IAAN,CAAW,oCAAX,EAAgD;AACvDV,IAAAA,OAAO,EAAE;AAAE;AACT,sBAAgB;AADT,KAD8C;AAIvD,WAAQwB,IAJ+C;AAKvD,mBAAcC;AALyC,GAAhD,EAMPvB,IANO,CAMFC,GAAG,IAAEA,GAAG,CAACC,IANP,CAAT;AAOD,C,CAED;;AACA,OAAO,SAASsB,aAAT,CAAuBC,aAAvB,EAAsCC,KAAtC,EAA4C;AACjD,SAAOhC,KAAK,CAACc,IAAN,CAAW,wCAAX,EAAoD;AACzDV,IAAAA,OAAO,EAAG;AACR,sBAAiB;AADT,KAD+C;AAIzD,cAAW2B,aAJ8C;AAKzD,aAAUC;AAL+C,GAApD,EAMJ1B,IANI,CAMCC,GAAG,IAAEA,GAAG,CAACC,IANV,CAAP;AAOD;AAED,OAAO,SAASyB,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA2B;AAChC,SAAOnC,KAAK,CAACc,IAAN,CAAW,mCAAX,EAAgD;AACrDV,IAAAA,OAAO,EAAG;AACR,sBAAiB;AADT,KAD2C;AAIrD,YAAS8B,IAJ4C;AAKrD,YAASC;AAL4C,GAAhD,EAMJ7B,IANI,CAMCC,GAAG,IAAEA,GAAG,CAACC,IANV,CAAP;AAOD;AAGD,OAAO,SAAS4B,iBAAT,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAoC;AACzC,SAAOtC,KAAK,CAACc,IAAN,CAAW,uCAAX,EAAmD;AACxDV,IAAAA,OAAO,EAAG;AACR,sBAAiB;AADT,KAD8C;AAIxD,WAAQiC,GAJgD;AAKxD,WAAQC;AALgD,GAAnD,EAMJhC,IANI,CAMCC,GAAG,IAAEA,GAAG,CAACC,IANV,EAMgB+B,KANhB,CAMsBC,KAAK,IAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAA2B,GAN3D,CAAP;AAOD","sourcesContent":["import axios from 'axios'\n\n// ajax 관련 요청 함수들은 여기다가 모듈화 \n\nexport function ajax1(input) {\n  return   axios.get('요청 url'+input, { \n            headers: { // 요청 헤더\n                         Authorization : 'KakaoAK 84b050274e5e1c6da8d55c7ad12c0feb' // api key\n                     }\n                    }).then(res=>res.data);\n}\n\nexport function join(id,name,email,pw) {\n  return   axios.post('http://localhost:8000/rest-auth/registration/', { \n            headers: { // 요청 헤더\n                        'Content-type': 'application/json'\n                     },\n                     \n                     username: name,\n                     email: email,\n                     password1: pw,\n                     password2: pw\n                  \n                    }).then(res=>res);\n}\n\nexport function login(name,email,pw) {\n  return   axios.post('http://localhost:8000/rest-auth/login/', { \n            headers: { // 요청 헤더\n                     'Content-type': 'application/json'\n                     },\n\n              \n                      username: name,\n                      email: email,\n                      password: pw\n                    \n                     \n                    }).then(res=>res.data)\n                    \n                    .then(res=>{\n                      const userinfo = {\n                        token:res.token,\n                        user:res.user\n                      }\n                      return userinfo\n                    });\n}\n\nexport function recipeRate(name, recipe_name, rate){\n  return axios.post('',{\n    headers : {\n      'Content-type' : 'application/json'\n    },\n\n    name : name,\n    recipe_name : recipe_name,\n    rate : rate\n  }).then(res => res.data)\n}\n\nexport function getRecip() {\n  return   axios.get('http://localhost:8000/recipe/getFive/').then(res=>res.data);\n}\n\nexport function getRecip2(tags,jaryo) {\n  return   axios.post('http://localhost:8000/recipe/algo/',{\n    headers: { // 요청 헤더\n      'Content-type': 'application/json'\n      },\n    \"tag\" : tags,\n    \"ingredients\":jaryo\n }).then(res=>res.data);\n}\n\n//recipe/regScore(recipe_number, score)\nexport function registerScore(recipe_number, score){\n  return axios.post('http://localhost:8000/recipe/regScore/',{\n    headers : {\n      'Content-type' : 'application/json'\n    },\n    \"recipe\" : recipe_number,\n    \"score\" : score\n  }).then(res=>res.data)\n}\n\nexport function getMap(food, area){\n  return axios.post('http://localhost:8000/recipe/map/', {\n    headers : {\n      'Content-type' : 'application/json'\n    },\n    \"food\" : food,\n    \"area\" : area\n  }).then(res=>res.data)\n}\n\n\nexport function requestComparison(id1, id2){\n  return axios.post('http://localhost:8000/recipe/compare/',{\n    headers : {\n      'Content-type' : 'application/json'\n    },\n    'id1' : id1,\n    'id2' : id2,\n  }).then(res=>res.data).catch(error => {console.log(error.respose)})\n}\n"]},"metadata":{},"sourceType":"module"}