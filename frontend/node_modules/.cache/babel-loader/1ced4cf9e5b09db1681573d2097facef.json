{"ast":null,"code":"var _jsxFileName = \"/Users/Jiyoung/Daebo_Project/frontend/src/components/search/SearchContainer.js\";\nimport React, { useState, Fragment } from 'react';\nimport { FormControlLabel, FormControl, FormLabel, RadioGroup, Radio, Box, Grid } from '@material-ui/core';\nimport Searchref from 'components/search/Search_ref';\nimport Searchfood from 'components/search/Search_food';\nimport { connect } from 'react-redux';\nimport styles from 'components/search/SearchStyle';\nimport { withRouter } from 'react-router-dom';\nimport { getRecip2 } from 'ajax/ajax';\nimport { setRecip } from 'store/actions/index';\nimport { setSerchInput } from '../../store/actions';\nimport RecipList from 'components/recip/reciplist.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport logo from './냉장고스몰.png'; // with import\n\nimport { delUserInfo } from 'store/actions/index';\n\nfunction Search(props) {\n  const classes = styles();\n  const [searchinpunt, setsearchinpunt] = useState('');\n  const [loaded, setloaded] = React.useState(false);\n  const [searched, setsearched] = React.useState(false);\n\n  function getRecipList(tags, jaryo) {\n    setloaded(false);\n    console.log('씨발너냐');\n    return new Promise(function (resolve) {\n      var res = getRecip2(tags, jaryo); // resolve(res)\n\n      res.then(result => {\n        props.SetRecip(result);\n      }).then(() => {\n        setloaded(true);\n      }).catch(error => {\n        console.log(error.response);\n\n        if (error.response.status == 401) {\n          alert('로그인해주세요');\n          localStorage.removeItem(\"userInfo\");\n          props.DelUserInfo();\n          props.history.push(`/Login`);\n        } else if (error.response.status == 404) {\n          alert('해당 재료의 조합을 찾을수 없어요.키워드와 재료를 변경하거나 오타를 확인하세요');\n          setsearched(false);\n        } else {\n          getRecipList(tags, jaryo);\n        }\n      });\n      resolve(res);\n    });\n  }\n\n  function handleSearch(e) {\n    e.preventDefault();\n\n    if (searchinpunt !== '') {\n      props.SetInput(searchinpunt);\n      setsearchinpunt('');\n      setsearched(true); // props.history.push(`/Result/${props.mode.mode}/`)\n\n      getRecipList(props.searchinput.input, props.jaryo);\n    }\n  }\n\n  function handleChange(e) {\n    e.preventDefault();\n    setsearchinpunt(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, props.type === '레시피' && !searched && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img2,\n    src: \"./assets/main_logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 52\n    }\n  }), props.type === '레시피' && searched && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 51\n    }\n  }), props.type === '맛집' && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: \"./assets/main.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 38\n    }\n  }), props.type === '여행지' && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.img,\n    src: \"./assets/\\uC5EC\\uD589.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 38\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 6,\n    md: 4,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, props.type === '레시피' && /*#__PURE__*/React.createElement(Searchref, {\n    onChange: handleChange,\n    onClick: handleSearch,\n    value: searchinpunt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), searched && (loaded ? /*#__PURE__*/React.createElement(RecipList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    margin: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"\\uC7AC\\uB8CC\\uAC00 \\uB108\\uBB34 \\uC801\\uC73C\\uBA74 \\uB85C\\uB529 \\uC2DC\\uAC04\\uC774 \\uC18C\\uC694\\uB420\\uC218 \\uC788\\uC5B4\\uC694..!\"))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    mode: state.mode,\n    // store 의 mode 를 props로 사용함\n    jaryo: state.jaryo,\n    searchinput: state.searchinput // recipes : state.recipes\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  //SetMode 에 엑션 디스패치 연결\n  return {\n    SetRecip: data => {\n      dispatch(setRecip(data));\n    },\n    SetInput: input => {\n      dispatch(setSerchInput(input));\n    },\n    DelUserInfo: () => {\n      dispatch(delUserInfo());\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search));","map":{"version":3,"sources":["/Users/Jiyoung/Daebo_Project/frontend/src/components/search/SearchContainer.js"],"names":["React","useState","Fragment","FormControlLabel","FormControl","FormLabel","RadioGroup","Radio","Box","Grid","Searchref","Searchfood","connect","styles","withRouter","getRecip2","setRecip","setSerchInput","RecipList","CircularProgress","logo","delUserInfo","Search","props","classes","searchinpunt","setsearchinpunt","loaded","setloaded","searched","setsearched","getRecipList","tags","jaryo","console","log","Promise","resolve","res","then","result","SetRecip","catch","error","response","status","alert","localStorage","removeItem","DelUserInfo","history","push","handleSearch","e","preventDefault","SetInput","searchinput","input","handleChange","target","value","root","type","img2","img","mapStateToProps","state","mode","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React , {useState, Fragment} from 'react';\nimport { FormControlLabel ,FormControl ,FormLabel ,RadioGroup , Radio ,Box ,Grid  } from '@material-ui/core'\nimport Searchref from 'components/search/Search_ref'\nimport Searchfood from 'components/search/Search_food'\nimport { connect } from 'react-redux'\nimport styles from 'components/search/SearchStyle'\nimport { withRouter  } from 'react-router-dom';\nimport {getRecip2} from 'ajax/ajax'\nimport {setRecip} from 'store/actions/index' \nimport { setSerchInput } from '../../store/actions';\nimport RecipList from 'components/recip/reciplist.js'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport logo from './냉장고스몰.png'; // with import\nimport {delUserInfo } from 'store/actions/index' \n\nfunction  Search(props) {\n  const classes = styles();\n  const [searchinpunt, setsearchinpunt] =  useState('');\n  const [loaded, setloaded] = React.useState(false);\n  const [searched, setsearched] = React.useState(false);\n\n\n  function getRecipList(tags, jaryo) {\n    setloaded(false)\n    console.log('씨발너냐')\n    return new Promise(function(resolve){\n      var res=  getRecip2(tags,jaryo)\n      // resolve(res)\n      res.then(result=>{\n        props.SetRecip(result)\n      })\n      .then(() =>{\n        setloaded(true)\n      }).catch(error => {\n        console.log(error.response)\n        if(error.response.status == 401){\n          alert('로그인해주세요')\n          localStorage.removeItem(\"userInfo\");\n          props.DelUserInfo() \n          props.history.push(`/Login`)\n        }else if(error.response.status == 404){\n          alert('해당 재료의 조합을 찾을수 없어요.키워드와 재료를 변경하거나 오타를 확인하세요')\n          setsearched(false)\n        }else{getRecipList(tags, jaryo)}\n    })\n      resolve(res)\n    })\n}\n\n\n\n  function handleSearch(e){\n    e.preventDefault();\n    if(searchinpunt !== ''){\n    props.SetInput(searchinpunt)\n    setsearchinpunt('')\n    setsearched(true)\n    // props.history.push(`/Result/${props.mode.mode}/`)\n    getRecipList(props.searchinput.input , props.jaryo)\n    }\n  }\n\n  function handleChange(e){\n    e.preventDefault();\n    setsearchinpunt(e.target.value)\n  }\n    return(\n\n        <Fragment>\n        <Box className={classes.root} align=\"center\">  \n        <Grid container\n              \n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\">\n\n            <Grid item  xs = {12} sm ={6} md ={6}>\n              {/* eslint-disable-next-line */}\n              {props.type ==='레시피' &&  !searched &&<img className={classes.img2} src='./assets/main_logo.png'></img>}\n              {/* eslint-disable-next-line */}\n              {props.type ==='레시피' &&  searched &&<img className={classes.img} src={logo}></img>}\n              {/* {props.type ==='레시피' && <Refrigerator></Refrigerator>} */}\n              {props.type ==='맛집' && <img className={classes.img} src='./assets/main.jpg'></img>}\n              {/* eslint-disable-next-line */}\n              {props.type ==='여행지' &&<img className={classes.img} src='./assets/여행.png'></img>}\n            </Grid>\n\n          </Grid>\n          \n          <Grid item xs = {10} sm ={6} md ={4} lg={4}  >\n          {/* <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">검색 타입을 선택하세요</FormLabel>\n              <br/>\n              {\n              !searched && (<RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n              <FormControlLabel\n                onChange ={props.onChange}\n                value=\"맛집\"\n                control={<Radio color=\"primary\" />}\n                label=\"맛집\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n               onChange ={props.onChange}\n                value=\"여행지\"\n                control={<Radio color=\"primary\" />}\n                label=\"여행지\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel \n             onChange ={props.onChange}\n               value=\"레시피\" \n               control={<Radio color=\"primary\" />} \n               label=\"레시피\"\n               labelPlacement=\"start\"/>\n            </RadioGroup> )\n              \n              }\n                \n            </FormControl> */}\n\n            {props.type==='레시피' &&  (\n                 <Searchref onChange={handleChange} onClick={handleSearch} value ={searchinpunt}></Searchref>\n             )\n            }\n             \n            </Grid>\n            <br/>\n            {/* <Chatbot></Chatbot> */}\n        </Box>\n        {searched && (\n          \n          loaded ?(<RecipList></RecipList>) :(\n          <Box align='center' margin={10}>\n            <CircularProgress  />\n            <FormLabel component=\"legend\">재료가 너무 적으면 로딩 시간이 소요될수 있어요..!</FormLabel>\n         </Box> \n           ) \n        )\n        }\n        </Fragment>\n\n    )\n}\n\n\n\nconst mapStateToProps  = state => {\n  return{\n    mode : state.mode, // store 의 mode 를 props로 사용함\n    jaryo : state.jaryo,\n    searchinput : state.searchinput\n    // recipes : state.recipes\n  }\n}\n\nconst mapDispatchToProps  = dispatch => { //SetMode 에 엑션 디스패치 연결\n  return{\n    SetRecip : (data) =>{\n      dispatch(setRecip(data))\n    },\n    SetInput : (input) =>{\n      dispatch(setSerchInput(input))\n    },\n    DelUserInfo: ( ) => {\n      dispatch(delUserInfo( ));\n    }\n  }\n}\n\nexport default  withRouter(\n  connect(\n  mapStateToProps,mapDispatchToProps\n)(Search))"]},"metadata":{},"sourceType":"module"}