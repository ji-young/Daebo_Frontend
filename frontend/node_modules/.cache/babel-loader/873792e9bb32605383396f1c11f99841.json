{"ast":null,"code":"var _jsxFileName = \"/Users/Jiyoung/Daebo_Project/frontend/src/components/recip/reciplist.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Grid } from '@material-ui/core';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { GridListTileBar, IconButton } from '@material-ui/core'; // import tileData from './tileData';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport { connect } from 'react-redux';\nimport Recipemodalscroll from 'components/recip/recipemodalscroll.js';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\nimport Recipecomparison from './recipecomparison.js';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { requestComparison } from 'ajax/ajax';\nimport { setRecipComparison } from 'store/actions/index';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: '10px'\n  },\n  gridList: {},\n  checkBox: {\n    zIndex: 9999\n  },\n  img: {\n    width: '100%',\n    height: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: '#4CAF50'\n  },\n  texth1: {\n    fontWeight: 'bold',\n    color: '#4CAF50',\n    fontSize: 30\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 15\n  }\n})));\nconst MyButton = styled(Button)({\n  width: '485px',\n  height: '50px',\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  alignContent: 'center',\n  margin: '0 auto',\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0\n});\n\nfunction RecipList(props) {\n  const classes = useStyles();\n  const initialValue = [{\n    \"-1\": false\n  }];\n  const [stateValue, setState] = React.useState(initialValue);\n  let dictObject = {};\n  let indexObject = {};\n  let infoObject = {};\n  const initialIdValue = [{\n    \"0\": 0\n  }];\n  const [stateIdValue, setIdValue] = React.useState(initialIdValue);\n  const initialResult = [{\n    \"0\": {}\n  }];\n  const [stateResult, setResult] = React.useState(initialResult);\n  const initialIdValue2 = [{\n    \"0\": 0\n  }];\n  const [stateIdValue2, setIdValue2] = React.useState(initialIdValue);\n  const initialResult2 = [{\n    \"0\": 0\n  }];\n  const [stateResult2, setResult2] = React.useState(initialResult);\n  useEffect(() => {\n    for (let i = 0; i < props.recipes.recipes[1].length; i++) {\n      dictObject[i] = false;\n    } // Should not ever set state during rendering, so do this in useEffect instead.\n\n\n    setState(dictObject);\n\n    for (let i = 0; i < 2; i++) {\n      indexObject[i] = 0;\n    }\n\n    setIdValue(indexObject);\n\n    for (let i = 0; i < 2; i++) {\n      infoObject[i] = {};\n    }\n\n    setResult(infoObject);\n    setIdValue2(indexObject);\n    setResult2(infoObject);\n  }, []); //const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n  //const error = count > 2 \n\n  let index = 0;\n\n  const handleChange = index => async event => {\n    let temp;\n\n    if (Boolean(event.target.checked) === false) {\n      temp = false;\n    } else {\n      temp = true;\n    }\n\n    setState({ ...stateValue,\n      [index]: temp\n    });\n  };\n\n  const re = props.recipes.recipes[1];\n  const collaborative_info = props.recipes.recipes[0];\n  const [checked, setChecked] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n  let select_img_list = [];\n  let k = [];\n\n  const handleClickOpen = scrollType => () => {\n    let obj_length = Object.keys(stateValue).length;\n    let count = 0;\n    let select_id_list = [];\n\n    for (let i = 0; i < obj_length; i++) {\n      console.log(stateValue[i]);\n\n      if (stateValue[i] === true) {\n        count = count + 1;\n        console.log(props.recipes.recipes[1][0]);\n        select_id_list.push(props.recipes.recipes[1][i].id); //select_img_list.push(props.recipes.recipes[1][i].img)\n      }\n    }\n\n    console.log('select_id_list');\n    console.log(select_id_list);\n\n    if (count != 2) {\n      alert('checkbox 2개 표시해주세요.');\n    } else {\n      //here \n      let first = select_id_list[0];\n      let second = select_id_list[1];\n      console.log(first);\n      console.log(second);\n      setIdValue({ ...stateIdValue,\n        \"1\": first\n      });\n      setIdValue2({ ...stateIdValue2,\n        \"2\": second\n      }); //setIdValue({ ...stateIdValue, \"2\" : second});      \n\n      console.log('...stateIdValue...');\n      console.log(stateIdValue);\n      const res = requestComparison(select_id_list[0], select_id_list[1]);\n      res.then(result => {\n        let resultFirst = result[0];\n        let resultSecond = result[1];\n        console.log(resultFirst);\n        console.log(resultSecond);\n        setResult({ ...stateResult,\n          \"1\": resultFirst\n        });\n        setResult2({ ...stateResult2,\n          \"2\": resultSecond\n        });\n        console.log('result');\n        console.log(result);\n      });\n      console.log('select_img_list');\n      console.log(select_img_list[0]);\n      setOpen(true);\n      setScroll(scrollType);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    onClick: handleClickOpen('body'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 6\n    }\n  }, \"recipe \\uBE44\\uAD50\\uD558\\uB7EC \\uAC00\\uAE30 go~ go~ (\\u2714 \\uCCB4\\uD06C\\uBC15\\uC2A4 2\\uAC1C) \\uFE0E\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    scroll: scroll,\n    \"aria-labelledby\": \"scroll-dialog-title\",\n    \"aria-describedby\": \"scroll-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"scroll-dialog-title\",\n    className: classes.texth1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 76\n    }\n  }, \"\\u2B50\\uFE0F \\uB808\\uC2DC\\uD53C \\uBE44\\uAD50\\uD574\\uBCF4\\uACE0 \\uACB0\\uC815\\uD558\\uAE30! go~ go~ \")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: scroll === 'paper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"scroll-dialog-description\",\n    ref: descriptionElementRef,\n    tabIndex: -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, [...new Array(1)].map(() => `                                                 \n                두 레시피를 비교합니다. 다시 고르시려면 ❗돌아가기❗ 해주세요.                 \n`).join('\\n')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, props.setRecipComparison(stateIdValue) || /*#__PURE__*/React.createElement(Recipecomparison, {\n    data: props,\n    id: stateIdValue,\n    info: stateResult,\n    id2: stateIdValue2,\n    info2: stateResult2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 56\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"\\uB3CC\\uC544\\uAC00\\uAE30\"))), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    cellHeight: 160,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, re.map((tile, index) => /*#__PURE__*/React.createElement(GridListTile, {\n    key: tile.img,\n    cols: tile.cols || 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: tile.title,\n    titlePosition: \"top\",\n    actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": `star ${tile.title}`,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GreenCheckbox, {\n      onChange: handleChange(index),\n      name: \"checkedG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 20\n      }\n    })),\n    actionPosition: \"left\",\n    className: classes.titleBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: tile.name // subtitle={<span>by: {tile.author}</span>}           \n    ,\n    actionIcon: /*#__PURE__*/React.createElement(Recipemodalscroll, {\n      id: tile.id,\n      name: tile.name,\n      time_req: tile.time_req,\n      cook_method: tile.cook_method,\n      category: tile.category,\n      img: tile.img,\n      ingredients: tile.ingredients,\n      tags: tile.tags,\n      collaborative: collaborative_info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipes: state.recipes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  //SetMode 에 엑션 디스패치 연결\n  return {\n    // SetRecip : (data) =>{\n    //   dispatch(setRecip(data))\n    // },\n    setRecipComparison: data => {\n      dispatch(setRecipComparison(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipList);","map":{"version":3,"sources":["/Users/Jiyoung/Daebo_Project/frontend/src/components/recip/reciplist.js"],"names":["React","useEffect","makeStyles","withStyles","green","Grid","GridList","GridListTile","GridListTileBar","IconButton","InfoIcon","connect","Recipemodalscroll","Checkbox","FormControlLabel","FormControl","FormGroup","FormHelperText","Button","styled","Recipecomparison","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","requestComparison","setRecipComparison","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","marginTop","gridList","checkBox","zIndex","img","width","height","formControl","margin","spacing","text","fontWeight","fontSize","color","texth1","GreenCheckbox","checked","props","MyButton","boxShadow","alignContent","border","RecipList","classes","initialValue","stateValue","setState","useState","dictObject","indexObject","infoObject","initialIdValue","stateIdValue","setIdValue","initialResult","stateResult","setResult","initialIdValue2","stateIdValue2","setIdValue2","initialResult2","stateResult2","setResult2","i","recipes","length","index","handleChange","event","temp","Boolean","target","re","collaborative_info","setChecked","open","setOpen","scroll","setScroll","select_img_list","k","handleClickOpen","scrollType","obj_length","Object","keys","count","select_id_list","console","log","push","id","alert","first","second","res","then","result","resultFirst","resultSecond","handleClose","descriptionElementRef","useRef","current","descriptionElement","focus","Array","map","join","tile","cols","title","icon","titleBar","name","time_req","cook_method","category","ingredients","tags","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { Grid  } from '@material-ui/core'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport {GridListTileBar,IconButton} from  '@material-ui/core'\n// import tileData from './tileData';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { connect } from 'react-redux'\nimport Recipemodalscroll from 'components/recip/recipemodalscroll.js'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\nimport Recipecomparison from './recipecomparison.js'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {requestComparison} from 'ajax/ajax';\nimport {setRecipComparison} from 'store/actions/index' \nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: '10px'\n  },\n  gridList: {\n\n  },\n  checkBox :{\n    zIndex : 9999,\n  },\n  img : {\n    width: '100%',  \n    height: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  text:{\n    fontWeight : 'bold',\n    fontSize : 20,\n    color: '#4CAF50'\n  },\n  texth1:{\n    fontWeight : 'bold',\n    color : '#4CAF50',\n    fontSize : 30,\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\nconst MyButton = styled(Button)({\n  width : '485px',\n  height : '50px',\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  alignContent : 'center',\n  margin : '0 auto',\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n});\nfunction RecipList(props) {\n  const classes = useStyles();\n  const initialValue = [\n    { \"-1\" : false}\n  ];\n  const [stateValue, setState] = React.useState(\n    initialValue\n  );\n  let dictObject = {}\n  let indexObject = {}\n  let infoObject = {}\n  const initialIdValue = [\n    {\"0\" : 0}\n  ];\n  const [stateIdValue, setIdValue] = React.useState(\n    initialIdValue\n  );\n\n  const initialResult = [\n    {\"0\": {}}\n  ]\n\n  const [stateResult, setResult] = React.useState(\n    initialResult\n  );\n  \nconst initialIdValue2 = [\n    {\"0\" : 0}\n  ];\n  const [stateIdValue2, setIdValue2] = React.useState(\n    initialIdValue\n  );\n\n  const initialResult2 = [\n    {\"0\": 0}\n  ]\n\n  const [stateResult2, setResult2] = React.useState(\n    initialResult\n  );\n  \n  useEffect(() => {\n    for(let i =0; i<props.recipes.recipes[1].length; i++){\n      dictObject[i] = false\n    }\n    // Should not ever set state during rendering, so do this in useEffect instead.\n    setState(dictObject);\n    for(let i =0; i<2; i++){\n      indexObject[i] = 0\n    }\n    setIdValue(indexObject)\n    for(let i=0; i<2; i++){\n      infoObject[i] = {}\n    }\n    setResult(infoObject)\n\n    setIdValue2(indexObject)\n    setResult2(infoObject)\n  },[]);\n\n  //const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n  //const error = count > 2 \n  let index = 0\n  \n  const handleChange = index => async(event) => {\n    let temp \n    if(Boolean(event.target.checked) === false){\n      temp = false\n    }else{\n      temp = true\n    }\n    setState({ ...stateValue, [index]: temp});\n  };\n \n  const re = props.recipes.recipes[1]\n  const collaborative_info = props.recipes.recipes[0]\n  const [checked, setChecked] = React.useState(true);\n  \n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n  let select_img_list = []\n  \n  let k = []\n\n  \n  const handleClickOpen = (scrollType) => () => {\n  \n    let obj_length = Object.keys(stateValue).length;\n    let count = 0\n    \n    let select_id_list = []\n    for(let i = 0; i<obj_length; i++){\n      console.log(stateValue[i])\n      if(stateValue[i] === true) {\n        count = count + 1\n        console.log(props.recipes.recipes[1][0])\n        select_id_list.push(props.recipes.recipes[1][i].id)\n        //select_img_list.push(props.recipes.recipes[1][i].img)\n      }\n    }\n    console.log('select_id_list')\n    console.log(select_id_list)\n    \n    if(count != 2){\n      alert('checkbox 2개 표시해주세요.')\n    }else{\n      //here \n\n      let first = select_id_list[0]\n      let second = select_id_list[1]\n      console.log(first)\n      console.log(second)\n      setIdValue({ ...stateIdValue, \"1\" : first});\n      setIdValue2({...stateIdValue2, \"2\" : second});\n      //setIdValue({ ...stateIdValue, \"2\" : second});      \n      console.log('...stateIdValue...')\n      console.log(stateIdValue)\n      const res= requestComparison(select_id_list[0], select_id_list[1])\n      res.then(\n       (result) =>{\n           let resultFirst = result[0]\n           let resultSecond = result[1]\n           console.log(resultFirst)\n           console.log(resultSecond)\n           setResult({ ...stateResult, \"1\" : resultFirst});\n           setResult2({ ...stateResult2, \"2\" : resultSecond});\n          \n           console.log('result')\n           console.log(result)\n         }\n      )\n      console.log('select_img_list')\n      console.log(select_img_list[0])\n\n      setOpen(true);\n      setScroll(scrollType);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n    \n      {/* <MyButton\n        onClick = {handleComparison} variant=\"contained\" color=\"secondary\">\n        recipe 비교하기  \n      </MyButton>  */}\n     <MyButton onClick={handleClickOpen('body')}>recipe 비교하러 가기 go~ go~ (✔ 체크박스 2개) ︎</MyButton>\n     <br/><br/><br/><br/>\n     <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" className = {classes.texth1}><h3>⭐️ 레시피 비교해보고 결정하기! go~ go~ </h3></DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          {/* <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n              )\n              .join('\\n')}\n          </DialogContentText> */}\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {[...new Array(1)]\n              .map(\n                () =>`                                                 \n                두 레시피를 비교합니다. 다시 고르시려면 ❗돌아가기❗ 해주세요.                 \n`,\n              )\n              .join('\\n')\n              }\n             \n          </DialogContentText>\n          <div>\n            \n            {props.setRecipComparison(stateIdValue) || <Recipecomparison data={props} id={stateIdValue} info={stateResult} id2 = {stateIdValue2} info2={stateResult2}></Recipecomparison>}\n          </div>\n          {/* <img src={props.recipes.recipes[1][select_id_list[0]].img} alt={\"레시피1\"} height=\"400\" width=\"500\" />  */}\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            돌아가기\n          </Button>\n        </DialogActions>\n      </Dialog>\n     {/* <FormControl required error={error}>    */}\n\n\n     \n     <FormControl>\n      <GridList cellHeight={160} className={classes.gridList} cols={3}>\n        {re.map((tile,index) => (\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              titlePosition=\"top\"\n              actionIcon={\n                <IconButton aria-label={`star ${tile.title}`} className={classes.icon}>\n                  {<GreenCheckbox onChange={handleChange(index)} name=\"checkedG\" />}\n                </IconButton>\n              }\n              actionPosition=\"left\"\n              className={classes.titleBar}\n            />\n            <GridListTileBar\n              title={tile.name}\n              // subtitle={<span>by: {tile.author}</span>}           \n              actionIcon={\n                  <Recipemodalscroll \n                  id={tile.id} \n                  name={tile.name} \n                  time_req={tile.time_req}\n                  cook_method={tile.cook_method}\n                  category = {tile.category}\n                  img={tile.img} \n                  ingredients={tile.ingredients} \n                  tags={tile.tags} \n                  collaborative = {collaborative_info}\n                  ></Recipemodalscroll>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      </FormControl>\n    </div>\n  );\n}\n\nconst mapStateToProps  = state => {\n  return{\n     recipes : state.recipes\n  }\n}\n\nconst mapDispatchToProps  = dispatch => { //SetMode 에 엑션 디스패치 연결\n  return{\n    // SetRecip : (data) =>{\n    //   dispatch(setRecip(data))\n    // },\n    setRecipComparison : (data) =>{\n      dispatch(setRecipComparison(data))\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,mapDispatchToProps\n)(RecipList)\n\n\n"]},"metadata":{},"sourceType":"module"}